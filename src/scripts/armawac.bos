// By MidKnight and PressureLine
	
#include "sfxtype.h"
#include "exptype.h"

piece  base, body, rjet, ljet, dish;
	
static-var  on;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	start-script SmokeUnit();
}
	

Activate()
{
	while( TRUE )
	{
		turn dish to z-axis <50> speed <40>;
		wait-for-turn dish around z-axis;
		turn dish to z-axis <-50> speed <40>;
		wait-for-turn dish around z-axis;
		turn dish to z-axis <0> speed <40>;
		wait-for-turn dish around z-axis;
		sleep rand( 600,5000 );
	}
}

Deactivate()
{
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode dish type BITMAPONLY | BITMAP2;
		explode body type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode rjet type FALL | BITMAP2;
		explode body type FALL | BITMAP3;
		explode dish type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode rjet type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode dish type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 2;
	explode base type BITMAPONLY | BITMAP1;
	explode body type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode dish type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}