piece base ,body ,engine1 ,engine2 ,nozzle, nano;
static-var spray;
#define SMOKEPIECE1	body
#define SMOKEPIECE2	engine1
#define SMOKEPIECE3	engine2
#define SIG_NUM1	2
#define SIG_NUM2	4

#include "StateChg.h"

activatescr()
	{
	TURN engine1 to x-axis <0> SPEED <30>;	
	TURN engine2 to x-axis <0> SPEED <30>;	
	}
deactivatescr()
	{
	TURN engine1 to x-axis <-45> SPEED <60>;	
	TURN engine2 to x-axis <-45> SPEED <60>;	
	}
#include "smokeunit.h"
#include "exptype.h"
#define ACTIVATECMD CALL-SCRIPT activatescr();
#define DEACTIVATECMD CALL-SCRIPT deactivatescr();
#include "StateChg.h"

lua_QueryNanoPiece() 
{
  return 0;
}

Create()
	{
		spray = 0;
		TURN engine1 to x-axis <-45> NOW;	
		TURN engine2 to x-axis <-45> NOW;	
		CALL-SCRIPT InitState();
		START-SCRIPT SmokeUnit();
	}
Activate()
	{
		START-SCRIPT RequestState( ACTIVE );
	}
Deactivate()
	{
		START-SCRIPT RequestState( INACTIVE );
	}

StartBuilding()
	{
	MOVE nozzle to y-axis [-1] SPEED [2];
	MOVE nozzle to z-axis [1] SPEED [2];
	set INBUILDSTANCE to TRUE;
	}

StopBuilding()
	{
	set INBUILDSTANCE to FALSE;
	MOVE nozzle to y-axis [0] SPEED [3];
	MOVE nozzle to z-axis [0] SPEED [3];
	}

QueryNanoPiece(piecenum)
{
	piecenum = nano;
	call-script lua_QueryNanoPiece(piecenum);
}

SweetSpot(piecenum)
	{
	piecenum = body;
	}
	
Killed(severity, corpsetype)
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode body 	type	BITMAPONLY | BITMAP1;
		explode engine2 	type	BITMAPONLY | BITMAP5;
		return(0);
		}
	if (severity <= 50)
		{
		corpsetype = 1;
		explode body type	SHATTER | BITMAP4;
		explode engine2 type	SHATTER | BITMAP4;
		explode engine1 type	SHATTER | BITMAP5;
		return(0);
		}
	if (severity <= 99)
		{
		corpsetype = 2;
		explode body type	SHATTER | BITMAP4;
		explode engine2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode engine1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		return(0);
		}
	corpsetype = 2;
	explode body type	SHATTER | BITMAP4;
	explode engine1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode engine2 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	return(0);
	}