piece  base, body, rfx, rjet, lfx, ljet,
       emit, gun;
       
static-var	moving;
			
// Signal definitions
#define SIG_MOVE			2

#define SMOKEPIECE1 body

#include "smokeunit.h"

#include "sfxtype.h"
#include "exptype.h"

DamageControl()
{
	var health;
	while (TRUE)
	{
		health = get HEALTH;
		if (health < 50)
		{
			emit-sfx SFXTYPE_WHITESMOKE from body;
			if (health < 25)
			{	
				emit-sfx SFXTYPE_BLACKSMOKE from base;
			}
		}
		sleep 1000;
	}
}

TurnJets()
{
	while ( TRUE )
	{
		sleep 100;
		turn rjet to x-axis ((get CURRENT_SPEED) +1) / 30 speed <50>;
		turn ljet to x-axis ((get CURRENT_SPEED) +1) / 30 speed <50>;
	}
}

RestoreAfterDelay()
{
	sleep 50;
	turn gun to y-axis <0> speed <20>;
	turn gun to x-axis <0> speed <20>;
}

ProcessFlames()
{
	while(TRUE)
	{
		if (moving == TRUE)
		{
			emit-sfx 1024 from rfx;
			emit-sfx 1024 from lfx;
		}
		sleep 60;	
	}
}

Create()
{
	hide lfx;
	hide rfx;
	hide emit;
	turn rfx to x-axis <90> now;
	turn lfx to x-axis <90> now;
	
	while (get BUILD_PERCENT_LEFT) {
		sleep 1000;
	}
	
	start-script TurnJets();
	//start-script ProcessFlames();
	start-script DamageControl();
}

AimFromWeapon1(piecenum)
{
	piecenum = gun;
}

QueryWeapon1(piecenum)
{
	piecenum = emit;
}

AimWeapon1 (heading, pitch)
{
	turn gun to y-axis heading speed <2000>;
	turn gun to x-axis <0> - pitch speed <2000>;
	start-script RestoreAfterDelay();
	return (TRUE);
}

FireWeapon1()
{
	turn rjet to x-axis <0.000000> speed <70.000000>;
	turn ljet to x-axis <0.000000> speed <70.000000>;
	sleep 20;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

StartMoving()
{
	moving = TRUE;
}

StopMoving()
{
	moving = FALSE;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
	}
	else if( severity <= 50 )
	{
		corpsetype = 1;

	}
	else if( severity <= 99 )
	{
		corpsetype = 2;

	}
	else
	{	
		corpsetype = 2;

	}
	explode base type 3;
	explode body type 3;
	explode rjet type 30;
	explode ljet type 30;
}
