#include "constants.h"

piece base, spinner, arm, ant, dish, pontoon1, pontoon2, pontoon3, pontoon4;

static-var  changing;

Create()
{
	if (GET GROUND_HEIGHT(GET UNIT_XZ)) {
		move pontoon1 to y-axis [3.75] now;
		hide pontoon1;
		move pontoon2 to y-axis [3.75] now;
		hide pontoon2;
		move pontoon3 to y-axis [3.75] now;
		hide pontoon3;
		move pontoon4 to y-axis [3.75] now;
		hide pontoon4;
	}
}

Activate()
{
//	changing = TRUE;
	sleep 1000;
	move dish to y-axis [11] speed [7];
	wait-for-move dish along y-axis;
	turn ant to z-axis <100> speed <60>;
	turn arm to z-axis <-30> speed <40>;
	spin spinner around y-axis speed <20>;
	wait-for-turn ant around z-axis;
	spin dish around y-axis speed <20> accelerate <20>;
	
//	changing = FALSE;
}

Deactivate()
{
//	changing = TRUE;
	spin dish around y-axis speed <0> accelerate <20>;
	turn ant to z-axis <0> speed <60>;
	turn arm to z-axis <0> speed <40>;
	wait-for-turn ant around z-axis;
	move dish to y-axis [0] speed [7];
	wait-for-move dish along y-axis;
	spin spinner around y-axis speed <0> accelerate <3>;
//	changing = FALSE;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from ant;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arm type BITMAPONLY | BITMAP2;
		explode ant type BITMAPONLY | BITMAP2;
		explode base type BITMAPONLY | BITMAP2;
		explode dish type BITMAPONLY | BITMAP1;
		explode spinner type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arm type FALL | BITMAP2;
		explode ant type FALL | BITMAP2;
		explode base type BITMAPONLY | BITMAP2;
		explode dish type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode spinner type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode ant type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type BITMAPONLY | BITMAP2;
		explode dish type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode spinner type SHATTER | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode arm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ant type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode base type BITMAPONLY | BITMAP2;
	explode dish type BITMAPONLY | BITMAP1;
	explode spinner type SHATTER | EXPLODE_ON_HIT | BITMAP1;
}
