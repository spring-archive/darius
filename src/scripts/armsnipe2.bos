// rx-79 ground-type(machinegun)
piece base, hips, torso, camera, arml, armr, forearml, forearmr, handl, handr, receiver, barrel, flare, scope, stock, thighl, thighr, shinl, shinr, footl, footr, backpack;

static-var ISMOVING, bAiming, bCanAim,shooting_num, reloading, gun_unpacked, desiredGunState;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

#include "sfxtype.h"
#include "exptype.h"		

#define SMOKEPIECE1 hips

#include "smokeunit.h"
//#include "exptype.h"


walk()
{
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		move camera to y-axis [0.000000] now;
		turn hips to x-axis <2.098901> now;
		turn torso to y-axis <4.736264> now;
		turn thighl to x-axis <-3.505495> now;
		turn thighr to x-axis <19.142857> now;
		turn shinr to x-axis <-21.093407> now;
		turn shinl to x-axis <31.104396> now;
		turn armr to x-axis <-20.912088> now;
		turn camera to y-axis <-5.087912> now;
		turn arml to x-axis <14.758242> now;
		turn forearml to x-axis <-34.796703> now;
		turn forearmr to x-axis <0.516484> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <1.049451> now;
		turn torso to y-axis <7.109890> now;
		turn thighl to x-axis <-9.840659> now;
		turn thighr to x-axis <28.912088> now;
		turn shinr to x-axis <-22.324176> now;
		turn shinl to x-axis <10.807692> now;
		turn armr to x-axis <-27.851648> now;
		turn camera to y-axis <-7.637363> now;
		turn arml to x-axis <21.445055> now;
		turn forearml to x-axis <-37.796703> now;
		turn forearmr to x-axis <0.598901> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		turn hips to x-axis <0.000000> now;
		turn torso to y-axis <9.489011> now;
		turn thighl to x-axis <-16.170330> now;
		turn thighr to x-axis <38.675824> now;
		turn shinr to x-axis <-23.554945> now;
		turn shinl to x-axis <-9.478022> now;
		turn armr to x-axis <-34.796703> now;
		turn camera to y-axis <-10.192308> now;
		turn arml to x-axis <28.126374> now;
		turn forearml to x-axis <-40.785714> now;
		turn forearmr to x-axis <0.697802> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <1.659341> now;
		turn torso to y-axis <8.521978> now;
		turn thighl to x-axis <-13.351648> now;
		turn thighr to x-axis <41.126374> now;
		turn shinr to x-axis <-10.010989> now;
		turn shinl to x-axis <-7.637363> now;
		turn armr to x-axis <-30.494505> now;
		turn camera to y-axis <-9.027473> now;
		turn arml to x-axis <23.021978> now;
		turn forearml to x-axis <-36.384615> now;
		turn forearmr to x-axis <-1.659341> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <3.329670> now;
		turn torso to y-axis <7.549451> now;
		turn thighl to x-axis <-10.538462> now;
		turn thighr to x-axis <43.598901> now;
		turn shinr to x-axis <3.505495> now;
		turn shinl to x-axis <-5.791209> now;
		turn armr to x-axis <-26.181319> now;
		turn camera to y-axis <-7.901099> now;
		turn arml to x-axis <17.923077> now;
		turn forearml to x-axis <-31.994505> now;
		turn forearmr to x-axis <-4.038462> now;
		sleep 35;
	}
	if( TRUE )
	{
		turn hips to x-axis <5.000000> now;
		turn torso to y-axis <6.587912> now;
		turn thighl to x-axis <-7.730769> now;
		turn thighr to x-axis <46.049451> now;
		turn shinr to x-axis <14.582418> now;
		turn shinl to x-axis <-3.939560> now;
		turn armr to x-axis <-21.884615> now;
		turn camera to y-axis <-6.758242> now;
		turn arml to x-axis <13.879121> now;
		turn forearml to x-axis <-27.593407> now;
		turn forearmr to x-axis <-6.406593> now;
		sleep 35;
	}
	if( TRUE )
	{
		turn hips to x-axis <6.670330> now;
		turn torso to y-axis <5.620879> now;
		turn thighl to x-axis <-4.917582> now;
		turn thighr to x-axis <48.516484> now;
		turn shinr to x-axis <25.653846> now;
		turn shinl to x-axis <-2.098901> now;
		turn armr to x-axis <-17.571429> now;
		turn camera to y-axis <-5.620879> now;
		turn arml to x-axis <9.840659> now;
		turn forearml to x-axis <-23.203297> now;
		turn forearmr to x-axis <-8.769231> now;
		sleep 35;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <5.708791> now;
		turn torso to y-axis <4.208791> now;
		turn thighl to x-axis <0.697802> now;
		turn thighr to x-axis <31.642857> now;
		turn shinr to x-axis <31.813187> now;
		turn shinl to x-axis <-6.758242> now;
		turn armr to x-axis <-13.703297> now;
		turn camera to y-axis <-4.208791> now;
		turn arml to x-axis <4.917582> now;
		turn forearml to x-axis <-18.362637> now;
		turn forearmr to x-axis <-6.758242> now;
		sleep 35;
	}
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		turn hips to x-axis <4.736264> now;
		turn torso to y-axis <2.807692> now;
		turn thighl to x-axis <6.318681> now;
		turn thighr to x-axis <14.758242> now;
		turn shinr to x-axis <37.967033> now;
		turn shinl to x-axis <-11.417582> now;
		turn armr to x-axis <-9.840659> now;
		turn camera to y-axis <-2.807692> now;
		turn arml to x-axis <0.000000> now;
		turn forearml to x-axis <-13.521978> now;
		turn forearmr to x-axis <-4.736264> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.219995] now;
		turn hips to x-axis <3.769231> now;
		turn torso to y-axis <1.395604> now;
		turn thighl to x-axis <10.192308> now;
		turn thighr to x-axis <-2.098901> now;
		turn shinr to x-axis <44.126374> now;
		turn shinl to x-axis <-14.148352> now;
		turn armr to x-axis <-5.967033> now;
		turn camera to y-axis <-1.395604> now;
		turn arml to x-axis <-2.626374> now;
		turn forearml to x-axis <-8.686813> now;
		turn forearmr to x-axis <-2.708791> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.300000] now;
		turn hips to x-axis <2.807692> now;
		turn torso to y-axis <0.000000> now;
		turn thighl to x-axis <14.060440> now;
		turn thighr to x-axis <-18.983516> now;
		turn shinr to x-axis <50.269231> now;
		turn shinl to x-axis <-16.873626> now;
		turn armr to x-axis <-2.098901> now;
		turn camera to y-axis <0.000000> now;
		turn arml to x-axis <-5.269231> now;
		turn forearml to x-axis <-3.857143> now;
		turn forearmr to x-axis <-0.697802> now;
		sleep 65;
	}
	if( TRUE )
	{
		move hips to y-axis [0.219995] now;
		turn hips to x-axis <2.098901> now;
		turn torso to y-axis <-1.307692> now;
		turn thighl to x-axis <20.032967> now;
		turn thighr to x-axis <-20.741758> now;
		turn shinr to x-axis <35.857143> now;
		turn shinl to x-axis <-22.142857> now;
		turn armr to x-axis <1.115385> now;
		turn camera to y-axis <0.956044> now;
		turn arml to x-axis <-8.258242> now;
		turn forearml to x-axis <-7.109890> now;
		turn forearmr to x-axis <-3.939560> now;
		sleep 65;
	}
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		turn hips to x-axis <1.395604> now;
		turn torso to y-axis <-2.626374> now;
		turn thighl to x-axis <26.010989> now;
		turn thighr to x-axis <-22.505495> now;
		turn shinr to x-axis <21.434066> now;
		turn shinl to x-axis <-27.423077> now;
		turn armr to x-axis <4.379121> now;
		turn camera to y-axis <1.928571> now;
		turn arml to x-axis <-11.252747> now;
		turn forearml to x-axis <-10.368132> now;
		turn forearmr to x-axis <-7.197802> now;
		sleep 55;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <0.697802> now;
		turn torso to y-axis <-3.939560> now;
		turn thighl to x-axis <34.104396> now;
		turn thighr to x-axis <-24.252747> now;
		turn shinr to x-axis <7.027473> now;
		turn shinl to x-axis <-26.181319> now;
		turn armr to x-axis <7.637363> now;
		turn camera to y-axis <2.895604> now;
		turn arml to x-axis <-11.598901> now;
		turn forearml to x-axis <-13.620879> now;
		turn forearmr to x-axis <-10.450549> now;
		sleep 55;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		turn hips to x-axis <0.000000> now;
		turn torso to y-axis <-5.269231> now;
		turn thighl to x-axis <42.186813> now;
		turn thighr to x-axis <-26.010989> now;
		turn shinr to x-axis <-7.379121> now;
		turn shinl to x-axis <-24.961538> now;
		turn armr to x-axis <10.890110> now;
		turn camera to y-axis <3.857143> now;
		turn arml to x-axis <-11.950549> now;
		turn forearml to x-axis <-16.873626> now;
		turn forearmr to x-axis <-13.708791> now;
		sleep 50;
	}
	if( TRUE )
	{
		move thighl to y-axis [0.169995] now;
		turn hips to x-axis <1.659341> now;
		turn torso to y-axis <-4.565934> now;
		turn thighl to x-axis <42.978022> now;
		turn thighr to x-axis <-22.505495> now;
		turn shinr to x-axis <-4.120879> now;
		turn shinl to x-axis <-14.060440> now;
		turn armr to x-axis <13.620879> now;
		turn camera to y-axis <3.417582> now;
		turn arml to x-axis <-14.928571> now;
		turn forearml to x-axis <-15.373626> now;
		turn forearmr to x-axis <-15.818681> now;
		sleep 50;
	}
	if( TRUE )
	{
		move thighl to y-axis [0.300000] now;
		turn hips to x-axis <3.329670> now;
		turn torso to y-axis <-3.857143> now;
		turn thighl to x-axis <43.769231> now;
		turn thighr to x-axis <-18.983516> now;
		turn shinr to x-axis <-0.868132> now;
		turn shinl to x-axis <-3.148352> now;
		turn armr to x-axis <16.340659> now;
		turn camera to y-axis <2.978022> now;
		turn arml to x-axis <-17.923077> now;
		turn forearml to x-axis <-13.879121> now;
		turn forearmr to x-axis <-17.923077> now;
		sleep 35;
	}
	if( TRUE )
	{
		move thighr to y-axis [-0.700000] now;
		turn hips to x-axis <5.000000> now;
		turn torso to y-axis <-3.159341> now;
		turn thighl to x-axis <44.565934> now;
		turn thighr to x-axis <-15.461538> now;
		turn shinr to x-axis <2.368132> now;
		turn shinl to x-axis <8.428571> now;
		turn armr to x-axis <19.071429> now;
		turn camera to y-axis <2.538462> now;
		turn arml to x-axis <-14.060440> now;
		turn forearml to x-axis <-12.379121> now;
		turn forearmr to x-axis <-20.032967> now;
		sleep 35;
	}
	if( TRUE )
	{
		move thighr to y-axis [-0.100000] now;
		turn hips to x-axis <6.670330> now;
		turn torso to y-axis <-2.456044> now;
		turn thighl to x-axis <45.357143> now;
		turn thighr to x-axis <-11.950549> now;
		turn shinr to x-axis <5.620879> now;
		turn shinl to x-axis <20.032967> now;
		turn armr to x-axis <21.791209> now;
		turn camera to y-axis <2.098901> now;
		turn arml to x-axis <-10.192308> now;
		turn forearml to x-axis <-10.890110> now;
		turn forearmr to x-axis <-22.142857> now;
		sleep 35;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <6.049451> now;
		turn torso to y-axis <-1.835165> now;
		turn thighl to x-axis <36.296703> now;
		turn thighr to x-axis <-9.027473> now;
		turn shinr to x-axis <3.417582> now;
		turn shinl to x-axis <26.626374> now;
		turn armr to x-axis <14.582418> now;
		turn camera to y-axis <1.565934> now;
		turn arml to x-axis <-5.087912> now;
		turn forearml to x-axis <-15.373626> now;
		turn forearmr to x-axis <-16.521978> now;
		sleep 35;
	}
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		turn hips to x-axis <5.439560> now;
		turn torso to y-axis <-1.225275> now;
		turn thighl to x-axis <27.241758> now;
		turn thighr to x-axis <-6.148352> now;
		turn shinr to x-axis <1.225275> now;
		turn shinl to x-axis <33.214286> now;
		turn armr to x-axis <7.379121> now;
		turn camera to y-axis <1.049451> now;
		turn arml to x-axis <0.000000> now;
		turn forearml to x-axis <-19.851648> now;
		turn forearmr to x-axis <-10.890110> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.219995] now;
		turn hips to x-axis <4.818681> now;
		turn torso to y-axis <-0.598901> now;
		turn thighl to x-axis <18.181319> now;
		turn thighr to x-axis <-3.236264> now;
		turn shinr to x-axis <-0.956044> now;
		turn shinl to x-axis <39.796703> now;
		turn armr to x-axis <0.164835> now;
		turn camera to y-axis <0.516484> now;
		turn arml to x-axis <3.159341> now;
		turn forearml to x-axis <-24.340659> now;
		turn forearmr to x-axis <-5.269231> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.300000] now;
		turn hips to x-axis <4.208791> now;
		turn torso to y-axis <0.000000> now;
		turn thighl to x-axis <9.137363> now;
		turn thighr to x-axis <-0.335165> now;
		turn shinr to x-axis <-3.159341> now;
		turn shinl to x-axis <46.406593> now;
		turn armr to x-axis <-7.027473> now;
		turn camera to y-axis <0.000000> now;
		turn arml to x-axis <6.318681> now;
		turn forearml to x-axis <-28.824176> now;
		turn forearmr to x-axis <0.335165> now;
		sleep 45;
	}
	move hips to y-axis [0.219995] now;
	turn hips to x-axis <3.159341> now;
	turn torso to y-axis <2.368132> now;
	turn thighl to x-axis <2.807692> now;
	turn thighr to x-axis <9.401099> now;
	turn shinr to x-axis <-12.120879> now;
	turn shinl to x-axis <38.758242> now;
	turn armr to x-axis <-13.961538> now;
	turn camera to y-axis <-2.538462> now;
	turn arml to x-axis <10.538462> now;
	turn forearml to x-axis <-31.813187> now;
	turn forearmr to x-axis <0.428571> now;
	sleep 45;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

shootwalk()
{
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		turn hips to x-axis <2.098901> now;
		turn thighl to x-axis <-3.505495> now;
		turn thighr to x-axis <24.434066> now;
		turn shinr to x-axis <-26.362637> now;
		turn shinl to x-axis <18.450549> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <1.049451> now;
		turn thighl to x-axis <-9.840659> now;
		turn thighr to x-axis <31.543956> now;
		turn shinr to x-axis <-25.313187> now;
		turn shinl to x-axis <4.478022> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		turn hips to x-axis <0.000000> now;
		turn thighl to x-axis <-16.170330> now;
		turn thighr to x-axis <38.675824> now;
		turn shinr to x-axis <-24.252747> now;
		turn shinl to x-axis <-9.478022> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <1.659341> now;
		turn thighl to x-axis <-13.351648> now;
		turn thighr to x-axis <41.126374> now;
		turn shinr to x-axis <-10.368132> now;
		turn shinl to x-axis <-7.637363> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <3.329670> now;
		turn thighl to x-axis <-10.538462> now;
		turn thighr to x-axis <43.598901> now;
		turn shinr to x-axis <3.505495> now;
		turn shinl to x-axis <-5.791209> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <5.000000> now;
		turn thighl to x-axis <-7.730769> now;
		turn thighr to x-axis <46.049451> now;
		turn shinr to x-axis <14.582418> now;
		turn shinl to x-axis <-3.939560> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <6.670330> now;
		turn thighl to x-axis <-4.917582> now;
		turn thighr to x-axis <48.516484> now;
		turn shinr to x-axis <25.653846> now;
		turn shinl to x-axis <-2.098901> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <5.708791> now;
		turn thighl to x-axis <1.565934> now;
		turn thighr to x-axis <31.642857> now;
		turn shinr to x-axis <31.813187> now;
		turn shinl to x-axis <-7.291209> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		turn hips to x-axis <4.736264> now;
		turn thighl to x-axis <8.076923> now;
		turn thighr to x-axis <14.758242> now;
		turn shinr to x-axis <37.967033> now;
		turn shinl to x-axis <-12.478022> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.219995] now;
		turn hips to x-axis <3.769231> now;
		turn thighl to x-axis <14.582418> now;
		turn thighr to x-axis <-2.098901> now;
		turn shinr to x-axis <44.126374> now;
		turn shinl to x-axis <-18.181319> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.300000] now;
		turn hips to x-axis <2.807692> now;
		turn thighl to x-axis <21.093407> now;
		turn thighr to x-axis <-18.983516> now;
		turn shinr to x-axis <50.269231> now;
		turn shinl to x-axis <-23.901099> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.219995] now;
		turn hips to x-axis <2.098901> now;
		turn thighl to x-axis <26.181319> now;
		turn thighr to x-axis <-20.741758> now;
		turn shinr to x-axis <35.857143> now;
		turn shinl to x-axis <-27.241758> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		turn hips to x-axis <1.395604> now;
		turn thighl to x-axis <31.285714> now;
		turn thighr to x-axis <-22.505495> now;
		turn shinr to x-axis <21.434066> now;
		turn shinl to x-axis <-30.582418> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <0.697802> now;
		turn thighl to x-axis <36.725275> now;
		turn thighr to x-axis <-24.252747> now;
		turn shinr to x-axis <7.027473> now;
		turn shinl to x-axis <-28.472527> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		turn hips to x-axis <0.000000> now;
		turn thighl to x-axis <42.186813> now;
		turn thighr to x-axis <-26.010989> now;
		turn shinr to x-axis <-7.379121> now;
		turn shinl to x-axis <-26.362637> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <1.659341> now;
		turn thighl to x-axis <42.978022> now;
		turn thighr to x-axis <-22.505495> now;
		turn shinr to x-axis <-4.120879> now;
		turn shinl to x-axis <-14.758242> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <3.329670> now;
		turn thighl to x-axis <43.769231> now;
		turn thighr to x-axis <-18.983516> now;
		turn shinr to x-axis <-0.868132> now;
		turn shinl to x-axis <-3.148352> now;
		sleep 50;
	}
	if( TRUE )
	{
		turn hips to x-axis <5.000000> now;
		turn thighl to x-axis <44.565934> now;
		turn thighr to x-axis <-15.461538> now;
		turn shinr to x-axis <2.368132> now;
		turn shinl to x-axis <8.428571> now;
		sleep 50;
	}
	if( TRUE )
	{
		move thighr to y-axis [-0.100000] now;
		turn hips to x-axis <6.670330> now;
		turn thighl to x-axis <45.357143> now;
		turn thighr to x-axis <-11.950549> now;
		turn shinr to x-axis <5.620879> now;
		turn shinl to x-axis <20.032967> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.700000] now;
		turn hips to x-axis <6.049451> now;
		turn thighl to x-axis <36.296703> now;
		turn thighr to x-axis <-9.027473> now;
		turn shinr to x-axis <3.417582> now;
		turn shinl to x-axis <26.626374> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.150000] now;
		turn hips to x-axis <5.439560> now;
		turn thighl to x-axis <27.241758> now;
		turn thighr to x-axis <-6.148352> now;
		turn shinr to x-axis <1.225275> now;
		turn shinl to x-axis <33.214286> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.219995] now;
		turn hips to x-axis <4.818681> now;
		turn thighl to x-axis <18.181319> now;
		turn thighr to x-axis <-3.236264> now;
		turn shinr to x-axis <-0.956044> now;
		turn shinl to x-axis <39.796703> now;
		sleep 50;
	}
	if( TRUE )
	{
		move hips to y-axis [0.300000] now;
		turn hips to x-axis <4.208791> now;
		turn thighl to x-axis <9.137363> now;
		turn thighr to x-axis <-0.335165> now;
		turn shinr to x-axis <-3.159341> now;
		turn shinl to x-axis <46.406593> now;
		sleep 50;
	}
	move hips to y-axis [0.219995] now;
	turn hips to x-axis <3.159341> now;
	turn thighl to x-axis <2.807692> now;
	turn thighr to x-axis <12.038462> now;
	turn shinr to x-axis <-14.758242> now;
	turn shinl to x-axis <32.434066> now;
	sleep 50;
}

stand()
{
	move Thighl to z-axis [0.000000] now;
	move Thighr to z-axis [0.000000] now;
	move Torso to x-axis [0.000000] now;
	move hips to x-axis [0.000000] now;	
//	move Barrel to x-axis [0.000000] now;
	move Footr to z-axis [0.000000] now;
	move Footl to x-axis [0.000000] now;
	move Footl to z-axis [0.000000] now;
	sleep 200;
}

stopwalk()
{
	turn shinl		to x-axis <0> 		speed <395>;
	turn shinr		to x-axis <0> 		speed <395>;
	turn thighr 	to x-axis <0> 		speed <235>;
	turn thighl 	to x-axis <0> 		speed <235>;
//	turn arml 		to x-axis <0>		speed <230>;
//	turn armr 		to x-axis <0> 		speed <230>;
	turn footl 		to x-axis <0>		speed <230>;
	turn footr 		to x-axis <0> 		speed <230>;	
	sleep 150;
}



StartMoving()
{   ISMOVING = TRUE;  }

StopMoving()
{	ISMOVING = FALSE; }

MotionControl(pheh)
	{	
	pheh = 1;
	/*spring has an issue with THIS block of code.*/
		while (pheh)
		{              
			IF (ISMOVING)
			{
				IF (baiming)
				{ 
				bCanAim = TRUE;
				CALL-SCRIPT shootwalk();
				}
                else
				{ 
				bCanAim = FALSE;
				CALL-SCRIPT walk();
				}
			}
            else
			{ 
			bCanAim = TRUE;
			CALL-SCRIPT stopwalk();
			sleep 120; 
			}
		}
	}
	
//--------------------------------------------------
//start ups :)
//------------------------------------------------------
Create()
	{
	// Initial State
	ISMOVING = FALSE;
	bAiming = FALSE;
	bCanAim = TRUE;
	shooting_num=1;
	hide flare;
	reloading = FALSE;
	gun_unpacked = FALSE;
	desiredGunState = 1;
//	turn forearmr to x-axis <-45> speed <280>;
	
	start-script MotionControl();	
	start-script SmokeUnit();
	}
	
SweetSpot(piecenum)
	{	piecenum=torso;	}	
	
AimFromPrimary(piecenum)
	{	piecenum=torso;	}

QueryPrimary(piecenum)
	{	piecenum=flare; }

AimFromScondary(piecenum)
	{	piecenum=torso;	}
		
//---------------------------------------------------------------------
//gun functions;
//---------------------------------------------------------------------	
RestoreAfterDelay()
	{
	while (bAiming)
		{
		sleep 500;
		}
	sleep 1000;
	if (gun_unpacked) 	
		{
		bCanAim = FALSE;
		move barrel to y-axis [0] speed <900>;
		move stock to y-axis [0] speed <900>;

		wait-for-move barrel along y-axis;
		wait-for-move stock along y-axis;
		
		turn forearmr  to x-axis <0> speed <140>;
		turn torso 		to y-axis <0> speed <120>;
		turn armr      to x-axis <0> speed <140>;
		turn forearml to z-axis <0> speed <250>;
		turn handl to y-axis <0> speed <250>;
		
		wait-for-turn forearml around z-axis;
		turn arml to x-axis <0> speed <250>;
		gun_unpacked = FALSE;
	
	
		bCanAim = TRUE;
		}
		return(0);
	}

AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	// Announce that we would like to aim, and wait until we can
	bAiming = TRUE;
	while (NOT bCanAim)
		{	sleep 100;		}
		turn hips to x-axis <0> now;
		turn torso to x-axis <0> now;
		turn armr to x-axis (<-90> - pitch) speed <100>;
		turn arml to x-axis (<-90> - pitch) speed <100>;
		wait-for-turn arml around x-axis;
		if (NOT gun_unpacked)
		{
			turn forearml to z-axis <90> speed <200>;
			turn handl to y-axis <90> speed <200>;
			wait-for-turn forearml around z-axis;
	
			move barrel to y-axis [-3.2] speed <900>;
			move stock to y-axis [2.5] speed <900>;
			wait-for-move barrel along y-axis;
			gun_unpacked = TRUE;
		}
		turn torso to y-axis heading speed <210>;
		wait-for-turn torso around y-axis;
		start-script RestoreAfterDelay();
		return(TRUE);
	}

FirePrimary()
{
//	bCanAim = FALSE;
	reloading = TRUE;
	turn forearmr to x-axis <-20> speed <400>;
//	turn torso to y-axis <-20> speed <400>;
//	turn camera to y-axis <20> speed <400>;
	turn forearmr to y-axis <30> speed <400>;
	sleep 1000;
	turn forearmr to x-axis <0> speed <50>;
//	turn torso to y-axis <0> speed <100>;
//	turn camera to y-axis <0> speed <150>;
	turn forearmr to y-axis <0> speed <200>;
	sleep 3000;	
//	bCanAim = TRUE;	
	reloading = FALSE;
}
	
//Shot1(unknown)
//	{
//
//	}
	

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
//death anim not work correctly...BAAAAAWWWW

		turn shinr to x-axis <0> now;	
		turn thighr to x-axis <0> now;
		turn thighl to x-axis <0> now;
		turn shinl to x-axis <0> now;

//		wait-for-turn thighl around x-axis;
//		wait-for-turn thighl around x-axis;
//		sleep 250;

		turn base to x-axis <90> speed <50>;
		turn hips to x-axis <-90> speed <50>;
		turn thighr to x-axis <-45> speed<50>;
		turn thighl to x-axis <-45> speed<50>;
		turn shinr to x-axis <135> speed<50>;	
		turn shinl to x-axis <135> speed <50>;
//		move hips to y-axis [-3] speed <2000>;

		wait-for-move hips along y-axis;		
		sleep 2000;
		
		explode arml type	SHATTER;
		explode armr type	SHATTER;
		explode hips type		SHATTER;
		explode torso type		SHATTER;
		return( 0 );
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode arml type	SHATTER;
		explode armr type	SHATTER;
		explode camera type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
//		sleep 200;
		explode torso type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		
		turn base to x-axis <-90> speed <50>;
		turn hips to x-axis <90> speed <50>;
		wait-for-turn base around x-axis;
		sleep 1000;
		
		explode hips type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode hips type		SHATTER;
		explode torso type		SHATTER;
		explode arml type	SHATTER;
		explode forearml type	SHATTER;
		explode armr type	SHATTER;
		explode forearmr type	SHATTER;
		explode thighr type		SHATTER;
		explode thighl type		SHATTER;
		explode shinl type		SHATTER;
		explode shinr type		SHATTER;
		explode backpack type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode receiver type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
\		return( 0 );
		}

	corpsetype = 3;
	explode hips type		SHATTER;
	explode torso type		SHATTER;
	explode arml type		SHATTER;
	explode forearml type		SHATTER;
	explode armr type		SHATTER;
	explode forearmr type		SHATTER;
	explode thighr type		SHATTER;
	explode thighl type		SHATTER;
	explode shinl type		SHATTER;
	explode shinr type		SHATTER;
	explode backpack type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode receiver type		FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return( 0 );
	}
