#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  chest, rflare, lflare, hips, lthigh, rthigh, head, lforearm, rforearm, rshoulder, lshoulder, rshin, rfoot, lshin, lfoot, lgun, lejector, rejector, rgun, lbelt, rbelt;

static-var  bMoving, bAiming, Static_Var_3, gun_1;

// Signal definitions
#define SIG_AIM				4

#define RESTORE_DELAY		3000


walk()
{
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move hips to y-axis [-0.169989] speed [3.000000];
		move lthigh to y-axis [0.000000] now;
		move lthigh to y-axis [0.169989] speed [3.000000];
		move rthigh to y-axis [0.400000] now;
		move rthigh to y-axis [0.319989] speed [1.000000];
		move chest to y-axis [0.000000] now;
		move chest to y-axis [-0.119989] speed [2.000000];
		turn hips to x-axis <7.027473> now;
		turn hips to x-axis <9.000000> speed <50.000000>;
		turn lthigh to x-axis <17.923077> now;
		turn lthigh to x-axis <20.000000> speed <46.000000>;
		turn rthigh to x-axis <-37.967033> now;
		turn rthigh to x-axis <-33.005495> speed <82.000000>;
		turn chest to y-axis <-9.137363> now;
		turn chest to y-axis <-7.000000> speed <35.000000>;
		turn head to y-axis <9.835165> now;
		turn head to y-axis <7.000000> speed <43.000000>;
		turn rshin to x-axis <17.214286> now;
		turn rshin to x-axis <13.000000> speed <78.000000>;
		turn rfoot to x-axis <-22.505495> now;
		turn rfoot to x-axis <-13.000000> speed <175.000000>;
		turn lshin to x-axis <0.000000> now;
		turn lshin to x-axis <10.000000> speed <215.000000>;
		turn lfoot to x-axis <-16.868132> now;
		turn lfoot to x-axis <-10.000000> speed <136.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.350000] speed [3.000000];
		move lthigh to y-axis [0.350000] speed [3.000000];
		move rthigh to y-axis [0.250000] speed [1.000000];
		move chest to y-axis [-0.239990] speed [2.000000];
		turn hips to x-axis <11.000000> speed <50.000000>;
		turn lthigh to x-axis <22.000000> speed <46.000000>;
		turn rthigh to x-axis <-29.005495> speed <82.000000>;
		turn chest to y-axis <-5.000000> speed <35.000000>;
		turn head to y-axis <5.000000> speed <43.000000>;
		turn rshin to x-axis <9.000000> speed <78.000000>;
		turn rfoot to x-axis <8.000000> speed <462.000000>;
		turn lshin to x-axis <21.000000> speed <215.000000>;
		turn lfoot to x-axis <-3.000000> speed <136.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.169989] speed [4.000000];
		move lthigh to y-axis [0.369989] speed [0.000000];
		move rthigh to y-axis [0.119989] speed [2.000000];
		move chest to y-axis [0.500000] speed [7.000000];
		turn hips to x-axis <9.000000> speed <62.000000>;
		turn lthigh to x-axis <7.000000> speed <351.000000>;
		turn rthigh to x-axis <-20.000000> speed <221.000000>;
		turn chest to y-axis <-3.000000> speed <46.000000>;
		turn head to y-axis <3.000000> speed <54.000000>;
		turn rshin to x-axis <7.000000> speed <54.000000>;
		turn rfoot to x-axis <4.000000> speed <104.000000>;
		turn lshin to x-axis <27.005495> speed <163.000000>;
		turn lfoot to x-axis <-10.000000> speed <163.000000>;
		sleep 42;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] speed [3.000000];
		move lthigh to y-axis [0.400000] speed [0.000000];
		move rthigh to y-axis [0.000000] speed [2.000000];
		move chest to y-axis [0.350000] speed [6.000000];
		turn hips to x-axis <6.000000> speed <58.000000>;
		turn lthigh to x-axis <-7.000000> speed <328.000000>;
		turn rthigh to x-axis <-11.000000> speed <207.000000>;
		turn chest to y-axis <-1.000000> speed <42.000000>;
		turn head to y-axis <1.000000> speed <50.000000>;
		turn rshin to x-axis <4.000000> speed <50.000000>;
		turn rfoot to x-axis <0.000000> speed <97.000000>;
		turn lshin to x-axis <34.005495> speed <152.000000>;
		turn lfoot to x-axis <-17.000000> speed <152.000000>;
		sleep 45;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.700000] speed [4.000000];
		move chest to y-axis [0.169989] speed [2.000000];
		turn hips to x-axis <5.000000> speed <22.000000>;
		turn lthigh to x-axis <-13.000000> speed <91.000000>;
		turn rthigh to x-axis <0.000000> speed <165.000000>;
		turn chest to y-axis <2.000000> speed <54.000000>;
		turn head to y-axis <-2.000000> speed <44.000000>;
		turn rfoot to x-axis <-8.000000> speed <113.000000>;
		turn lshin to x-axis <23.005495> speed <158.000000>;
		turn lfoot to x-axis <-12.000000> speed <69.000000>;
		sleep 71;
	}
	if( TRUE )
	{
		move lthigh to y-axis [1.000000] speed [4.000000];
		move chest to y-axis [0.000000] speed [2.000000];
		turn hips to x-axis <3.000000> speed <21.000000>;
		turn lthigh to x-axis <-20.000000> speed <90.000000>;
		turn rthigh to x-axis <12.000000> speed <163.000000>;
		turn chest to y-axis <5.000000> speed <53.000000>;
		turn head to y-axis <-5.000000> speed <43.000000>;
		turn rfoot to x-axis <-16.000000> speed <112.000000>;
		turn lshin to x-axis <12.000000> speed <156.000000>;
		turn lfoot to x-axis <-7.000000> speed <68.000000>;
		sleep 72;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.700000] speed [3.000000];
		turn hips to x-axis <5.000000> speed <18.000000>;
		turn lthigh to x-axis <-28.005495> speed <92.000000>;
		turn rthigh to x-axis <14.000000> speed <26.000000>;
		turn chest to y-axis <7.000000> speed <18.000000>;
		turn head to y-axis <-7.000000> speed <22.000000>;
		turn rshin to x-axis <2.000000> speed <26.000000>;
		turn rfoot to x-axis <-16.000000> speed <0.000000>;
		turn lshin to x-axis <14.000000> speed <26.000000>;
		turn lfoot to x-axis <-16.000000> speed <100.000000>;
		sleep 93;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.400000] speed [3.000000];
		turn hips to x-axis <7.000000> speed <18.000000>;
		turn lthigh to x-axis <-37.005495> speed <90.000000>;
		turn rthigh to x-axis <17.000000> speed <25.000000>;
		turn chest to y-axis <9.000000> speed <18.000000>;
		turn head to y-axis <-9.000000> speed <22.000000>;
		turn rshin to x-axis <0.000000> speed <25.000000>;
		turn rfoot to x-axis <-16.000000> speed <0.000000>;
		turn lshin to x-axis <17.000000> speed <25.000000>;
		turn lfoot to x-axis <-26.005495> speed <98.000000>;
		sleep 95;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.169989] speed [3.000000];
		move lthigh to y-axis [0.319989] speed [1.000000];
		move rthigh to y-axis [0.169989] speed [3.000000];
		move chest to y-axis [-0.119989] speed [2.000000];
		turn hips to x-axis <9.000000> speed <50.000000>;
		turn lthigh to x-axis <-33.005495> speed <78.000000>;
		turn rthigh to x-axis <19.000000> speed <53.000000>;
		turn chest to y-axis <7.000000> speed <39.000000>;
		turn head to y-axis <-7.000000> speed <35.000000>;
		turn rshin to x-axis <10.000000> speed <218.000000>;
		turn rfoot to x-axis <-8.000000> speed <161.000000>;
		turn lshin to x-axis <13.000000> speed <78.000000>;
		turn lfoot to x-axis <-9.000000> speed <344.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.350000] speed [3.000000];
		move lthigh to y-axis [0.250000] speed [1.000000];
		move rthigh to y-axis [0.350000] speed [3.000000];
		move chest to y-axis [-0.239990] speed [2.000000];
		turn hips to x-axis <11.000000> speed <50.000000>;
		turn lthigh to x-axis <-29.005495> speed <78.000000>;
		turn rthigh to x-axis <22.000000> speed <53.000000>;
		turn chest to y-axis <5.000000> speed <39.000000>;
		turn head to y-axis <-5.000000> speed <35.000000>;
		turn rshin to x-axis <21.000000> speed <218.000000>;
		turn rfoot to x-axis <0.000000> speed <161.000000>;
		turn lshin to x-axis <9.000000> speed <78.000000>;
		turn lfoot to x-axis <7.000000> speed <344.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.169989] speed [3.000000];
		move lthigh to y-axis [0.119989] speed [2.000000];
		move rthigh to y-axis [0.369989] speed [0.000000];
		move chest to y-axis [0.500000] speed [6.000000];
		turn hips to x-axis <9.000000> speed <56.000000>;
		turn lthigh to x-axis <-20.000000> speed <194.000000>;
		turn rthigh to x-axis <7.000000> speed <314.000000>;
		turn chest to y-axis <3.000000> speed <37.000000>;
		turn head to y-axis <-4.000000> speed <41.000000>;
		turn rshin to x-axis <36.005495> speed <329.000000>;
		turn rfoot to x-axis <-5.000000> speed <104.000000>;
		turn lshin to x-axis <7.000000> speed <52.000000>;
		turn lfoot to x-axis <3.000000> speed <82.000000>;
		sleep 47;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] speed [3.000000];
		move lthigh to y-axis [0.000000] speed [2.000000];
		move rthigh to y-axis [0.400000] speed [0.000000];
		move chest to y-axis [0.350000] speed [6.000000];
		turn hips to x-axis <6.000000> speed <54.000000>;
		turn lthigh to x-axis <-11.000000> speed <190.000000>;
		turn rthigh to x-axis <-7.000000> speed <307.000000>;
		turn chest to y-axis <2.000000> speed <36.000000>;
		turn head to y-axis <-2.000000> speed <40.000000>;
		turn rshin to x-axis <52.005495> speed <322.000000>;
		turn rfoot to x-axis <-10.000000> speed <102.000000>;
		turn lshin to x-axis <4.000000> speed <51.000000>;
		turn lfoot to x-axis <0.000000> speed <80.000000>;
		sleep 48;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] speed [0.000000];
		move rthigh to y-axis [0.700000] speed [4.000000];
		move chest to y-axis [0.169989] speed [2.000000];
		turn hips to x-axis <5.000000> speed <21.000000>;
		turn lthigh to x-axis <0.000000> speed <161.000000>;
		turn rthigh to x-axis <-13.000000> speed <90.000000>;
		turn chest to y-axis <-1.000000> speed <52.000000>;
		turn head to y-axis <1.000000> speed <52.000000>;
		turn rshin to x-axis <39.005495> speed <180.000000>;
		turn rfoot to x-axis <-7.000000> speed <40.000000>;
		turn lshin to x-axis <4.000000> speed <2.000000>;
		turn lfoot to x-axis <-8.000000> speed <109.000000>;
		sleep 74;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] speed [0.000000];
		move rthigh to y-axis [1.000000] speed [3.000000];
		move chest to y-axis [0.000000] speed [2.000000];
		turn hips to x-axis <3.000000> speed <20.000000>;
		turn lthigh to x-axis <12.000000> speed <157.000000>;
		turn rthigh to x-axis <-20.000000> speed <87.000000>;
		turn chest to y-axis <-5.000000> speed <50.000000>;
		turn head to y-axis <5.000000> speed <50.000000>;
		turn rshin to x-axis <25.005495> speed <175.000000>;
		turn rfoot to x-axis <-4.000000> speed <39.000000>;
		turn lshin to x-axis <4.000000> speed <2.000000>;
		turn lfoot to x-axis <-16.000000> speed <106.000000>;
		sleep 76;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] speed [0.000000];
		move rthigh to y-axis [0.700000] speed [3.000000];
		turn hips to x-axis <5.000000> speed <18.000000>;
		turn lthigh to x-axis <15.000000> speed <28.000000>;
		turn rthigh to x-axis <-29.005495> speed <93.000000>;
		turn chest to y-axis <-7.000000> speed <18.000000>;
		turn head to y-axis <7.000000> speed <22.000000>;
		turn rshin to x-axis <21.000000> speed <44.000000>;
		turn rfoot to x-axis <-12.000000> speed <86.000000>;
		turn lshin to x-axis <2.000000> speed <22.000000>;
		turn lfoot to x-axis <-16.000000> speed <3.000000>;
		sleep 94;
	}
	sleep 94;
}

walkshins()
{
	if( TRUE )
	{
		move hips to y-axis [0.000000] now;
		move hips to y-axis [-0.169989] speed [3.000000];
		move lthigh to y-axis [0.000000] now;
		move lthigh to y-axis [0.169989] speed [3.000000];
		move rthigh to y-axis [0.400000] now;
		move rthigh to y-axis [0.319989] speed [1.000000];
		turn hips to x-axis <7.027473> now;
		turn hips to x-axis <9.000000> speed <50.000000>;
		turn lthigh to x-axis <17.923077> now;
		turn lthigh to x-axis <20.000000> speed <46.000000>;
		turn rthigh to x-axis <-37.967033> now;
		turn rthigh to x-axis <-33.005495> speed <82.000000>;
		turn rshin to x-axis <17.214286> now;
		turn rshin to x-axis <13.000000> speed <78.000000>;
		turn rfoot to x-axis <-22.505495> now;
		turn rfoot to x-axis <-13.000000> speed <175.000000>;
		turn lshin to x-axis <0.000000> now;
		turn lshin to x-axis <10.000000> speed <215.000000>;
		turn lfoot to x-axis <-16.868132> now;
		turn lfoot to x-axis <-10.000000> speed <136.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.350000] speed [3.000000];
		move lthigh to y-axis [0.350000] speed [3.000000];
		move rthigh to y-axis [0.250000] speed [1.000000];
		turn hips to x-axis <11.000000> speed <50.000000>;
		turn lthigh to x-axis <22.000000> speed <46.000000>;
		turn rthigh to x-axis <-29.005495> speed <82.000000>;
		turn rshin to x-axis <9.000000> speed <78.000000>;
		turn rfoot to x-axis <8.000000> speed <462.000000>;
		turn lshin to x-axis <21.000000> speed <215.000000>;
		turn lfoot to x-axis <-3.000000> speed <136.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.169989] speed [4.000000];
		move lthigh to y-axis [0.369989] speed [0.000000];
		move rthigh to y-axis [0.119989] speed [2.000000];
		turn hips to x-axis <9.000000> speed <62.000000>;
		turn lthigh to x-axis <7.000000> speed <351.000000>;
		turn rthigh to x-axis <-20.000000> speed <221.000000>;
		turn rshin to x-axis <7.000000> speed <54.000000>;
		turn rfoot to x-axis <4.000000> speed <104.000000>;
		turn lshin to x-axis <27.005495> speed <163.000000>;
		turn lfoot to x-axis <-10.000000> speed <163.000000>;
		sleep 42;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] speed [3.000000];
		move lthigh to y-axis [0.400000] speed [0.000000];
		move rthigh to y-axis [0.000000] speed [2.000000];
		turn hips to x-axis <6.000000> speed <58.000000>;
		turn lthigh to x-axis <-7.000000> speed <328.000000>;
		turn rthigh to x-axis <-11.000000> speed <207.000000>;
		turn rshin to x-axis <4.000000> speed <50.000000>;
		turn rfoot to x-axis <0.000000> speed <97.000000>;
		turn lshin to x-axis <34.005495> speed <152.000000>;
		turn lfoot to x-axis <-17.000000> speed <152.000000>;
		sleep 45;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.700000] speed [4.000000];
		turn hips to x-axis <5.000000> speed <22.000000>;
		turn lthigh to x-axis <-13.000000> speed <91.000000>;
		turn rthigh to x-axis <0.000000> speed <165.000000>;
		turn rfoot to x-axis <-8.000000> speed <113.000000>;
		turn lshin to x-axis <23.005495> speed <158.000000>;
		turn lfoot to x-axis <-12.000000> speed <69.000000>;
		sleep 71;
	}
	if( TRUE )
	{
		move lthigh to y-axis [1.000000] speed [4.000000];
		turn hips to x-axis <3.000000> speed <21.000000>;
		turn lthigh to x-axis <-20.000000> speed <90.000000>;
		turn rthigh to x-axis <12.000000> speed <163.000000>;
		turn rfoot to x-axis <-16.000000> speed <112.000000>;
		turn lshin to x-axis <12.000000> speed <156.000000>;
		turn lfoot to x-axis <-7.000000> speed <68.000000>;
		sleep 72;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.700000] speed [3.000000];
		turn hips to x-axis <5.000000> speed <18.000000>;
		turn lthigh to x-axis <-28.005495> speed <92.000000>;
		turn rthigh to x-axis <14.000000> speed <26.000000>;
		turn rshin to x-axis <2.000000> speed <26.000000>;
		turn rfoot to x-axis <-16.000000> speed <0.000000>;
		turn lshin to x-axis <14.000000> speed <26.000000>;
		turn lfoot to x-axis <-16.000000> speed <100.000000>;
		sleep 93;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.400000] speed [3.000000];
		turn hips to x-axis <7.000000> speed <18.000000>;
		turn lthigh to x-axis <-37.005495> speed <90.000000>;
		turn rthigh to x-axis <17.000000> speed <25.000000>;
		turn rshin to x-axis <0.000000> speed <25.000000>;
		turn rfoot to x-axis <-16.000000> speed <0.000000>;
		turn lshin to x-axis <17.000000> speed <25.000000>;
		turn lfoot to x-axis <-26.005495> speed <98.000000>;
		sleep 95;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.169989] speed [3.000000];
		move lthigh to y-axis [0.319989] speed [1.000000];
		move rthigh to y-axis [0.169989] speed [3.000000];
		turn hips to x-axis <9.000000> speed <50.000000>;
		turn lthigh to x-axis <-33.005495> speed <78.000000>;
		turn rthigh to x-axis <19.000000> speed <53.000000>;
		turn rshin to x-axis <10.000000> speed <218.000000>;
		turn rfoot to x-axis <-8.000000> speed <161.000000>;
		turn lshin to x-axis <13.000000> speed <78.000000>;
		turn lfoot to x-axis <-9.000000> speed <344.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.350000] speed [3.000000];
		move lthigh to y-axis [0.250000] speed [1.000000];
		move rthigh to y-axis [0.350000] speed [3.000000];
		turn hips to x-axis <11.000000> speed <50.000000>;
		turn lthigh to x-axis <-29.005495> speed <78.000000>;
		turn rthigh to x-axis <22.000000> speed <53.000000>;
		turn rshin to x-axis <21.000000> speed <218.000000>;
		turn rfoot to x-axis <0.000000> speed <161.000000>;
		turn lshin to x-axis <9.000000> speed <78.000000>;
		turn lfoot to x-axis <7.000000> speed <344.000000>;
		sleep 49;
	}
	if( TRUE )
	{
		move hips to y-axis [-0.169989] speed [3.000000];
		move lthigh to y-axis [0.119989] speed [2.000000];
		move rthigh to y-axis [0.369989] speed [0.000000];
		turn hips to x-axis <9.000000> speed <56.000000>;
		turn lthigh to x-axis <-20.000000> speed <194.000000>;
		turn rthigh to x-axis <7.000000> speed <314.000000>;
		turn rshin to x-axis <36.005495> speed <329.000000>;
		turn rfoot to x-axis <-5.000000> speed <104.000000>;
		turn lshin to x-axis <7.000000> speed <52.000000>;
		turn lfoot to x-axis <3.000000> speed <82.000000>;
		sleep 47;
	}
	if( TRUE )
	{
		move hips to y-axis [0.000000] speed [3.000000];
		move lthigh to y-axis [0.000000] speed [2.000000];
		move rthigh to y-axis [0.400000] speed [0.000000];
		turn hips to x-axis <6.000000> speed <54.000000>;
		turn lthigh to x-axis <-11.000000> speed <190.000000>;
		turn rthigh to x-axis <-7.000000> speed <307.000000>;
		turn rshin to x-axis <52.005495> speed <322.000000>;
		turn rfoot to x-axis <-10.000000> speed <102.000000>;
		turn lshin to x-axis <4.000000> speed <51.000000>;
		turn lfoot to x-axis <0.000000> speed <80.000000>;
		sleep 48;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] speed [0.000000];
		move rthigh to y-axis [0.700000] speed [4.000000];
		turn hips to x-axis <5.000000> speed <21.000000>;
		turn lthigh to x-axis <0.000000> speed <161.000000>;
		turn rthigh to x-axis <-13.000000> speed <90.000000>;
		turn rshin to x-axis <39.005495> speed <180.000000>;
		turn rfoot to x-axis <-7.000000> speed <40.000000>;
		turn lshin to x-axis <4.000000> speed <2.000000>;
		turn lfoot to x-axis <-8.000000> speed <109.000000>;
		sleep 74;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] speed [0.000000];
		move rthigh to y-axis [1.000000] speed [3.000000];
		turn hips to x-axis <3.000000> speed <20.000000>;
		turn lthigh to x-axis <12.000000> speed <157.000000>;
		turn rthigh to x-axis <-20.000000> speed <87.000000>;
		turn rshin to x-axis <25.005495> speed <175.000000>;
		turn rfoot to x-axis <-4.000000> speed <39.000000>;
		turn lshin to x-axis <4.000000> speed <2.000000>;
		turn lfoot to x-axis <-16.000000> speed <106.000000>;
		sleep 76;
	}
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] speed [0.000000];
		move rthigh to y-axis [0.700000] speed [3.000000];
		turn hips to x-axis <5.000000> speed <18.000000>;
		turn lthigh to x-axis <15.000000> speed <28.000000>;
		turn rthigh to x-axis <-29.005495> speed <93.000000>;
		turn rshin to x-axis <21.000000> speed <44.000000>;
		turn rfoot to x-axis <-12.000000> speed <86.000000>;
		turn lshin to x-axis <2.000000> speed <22.000000>;
		turn lfoot to x-axis <-16.000000> speed <3.000000>;
		sleep 94;
	}
	sleep 94;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from chest;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walkshins();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rthigh to x-axis <0.000000> speed <400.000000>;
				turn rshin to x-axis <0.000000> speed <400.000000>;
				turn rfoot to x-axis <0.000000> speed <400.000000>;
				turn lthigh to x-axis <0.000000> speed <400.000000>;
				turn lshin to x-axis <0.000000> speed <400.000000>;
				turn lfoot to x-axis <0.000000> speed <400.000000>;
				if( !aiming )
				{
					turn chest to y-axis <0.000000> speed <180.000000>;
					turn rshoulder to x-axis <0.000000> speed <400.000000>;
					turn rforearm to x-axis <0.000000> speed <400.000000>;
					turn lshoulder to x-axis <0.000000> speed <400.000000>;
					turn lforearm to x-axis <0.000000> speed <400.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide lejector;
	hide rejector;
	hide rflare;
	hide lflare;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	gun_1 = rflare;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = chest;
}

RestoreAfterDelay()
{
	sleep RESTORE_DELAY;
	set-signal-mask 0;
	turn chest to y-axis <0.000000> speed <90.000000>;
	turn rforearm to x-axis <0.000000> speed <45.000000>;
	turn rshoulder to y-axis <0.000000> speed <45.000000>;
	turn lforearm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn chest around y-axis;
	wait-for-turn rforearm around x-axis;
	wait-for-turn rshoulder around y-axis;
	wait-for-turn lforearm around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = chest;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = rflare;
	}
	if( gun_1 == 2 )
	{
		piecenum = lflare;
	}
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		emit-sfx 1024 from rflare;
		emit-sfx 1025 from rejector;
		sleep 100;
		emit-sfx 1024 from rflare;
		emit-sfx 1025 from rejector;
		sleep 100;
		emit-sfx 1024 from rflare;
		emit-sfx 1025 from rejector;
		gun_1 = lflare;
		turn rbelt to x-axis <-2.000000> speed <50.000000>;
		turn lbelt to x-axis <2.000000> speed <50.000000>;
		return (0);
	}
	if( gun_1 == 2 )
	{
		emit-sfx 1024 from lflare;
		emit-sfx 1025 from lejector;
		sleep 100;
		emit-sfx 1024 from lflare;
		emit-sfx 1025 from lejector;
		sleep 100;
		emit-sfx 1024 from lflare;
		emit-sfx 1025 from lejector;
		turn lbelt to x-axis <-2.000000> speed <50.000000>;
		turn rbelt to x-axis <2.000000> speed <50.000000>;
		gun_1 = rflare;
	}
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
//	while( !Static_Var_3 )
//	{
//		sleep 100;
//	}
	turn chest to y-axis heading speed <400.000000>;
	turn rforearm to x-axis <0.000000> - pitch speed <400.000000>;
	turn lforearm to x-axis <0.000000> - pitch speed <400.000000>;
	wait-for-turn chest around y-axis;
	wait-for-turn lforearm around x-axis;
	wait-for-turn rforearm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lgun type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lshin type BITMAPONLY | BITMAP4;
		explode lshoulder type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode lforearm type BITMAPONLY | BITMAP2;
		explode rgun type BITMAPONLY | BITMAP4;
		explode rfoot type BITMAPONLY | BITMAP5;
		explode rshin type BITMAPONLY | BITMAP1;
		explode rshoulder type BITMAPONLY | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP3;
		explode rforearm type BITMAPONLY | BITMAP4;
		explode chest type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lgun type FALL | BITMAP2;
		explode lfoot type FALL | BITMAP3;
		explode lshin type FALL | BITMAP4;
		explode lshoulder type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode lforearm type FALL | BITMAP2;
		explode rgun type FALL | BITMAP4;
		explode rfoot type FALL | BITMAP5;
		explode rshin type FALL | BITMAP1;
		explode rshoulder type FALL | BITMAP2;
		explode rthigh type FALL | BITMAP3;
		explode rforearm type FALL | BITMAP4;
		explode chest type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lshin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lforearm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rshin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rforearm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode chest type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lshin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lforearm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rshin type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rshoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rforearm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode chest type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
