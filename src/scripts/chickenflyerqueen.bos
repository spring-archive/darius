piece body,head,tail,lwing,rwing,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,
lforearml,lbladel,rforearml,rbladel,lforearmu,lbladeu,rforearmu,rbladeu,spike1,spike2,spike3,firepoint, spore1, spore2, spore3;

static-var bMoving, feet;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

#include "constants.h"

fly()
{
	if (bMoving)
		{
			turn lwing to z-axis <-40> speed<120>;
			turn rwing to z-axis <40> speed<120>;
			turn tail to x-axis <20> speed<40>;
			move body to y-axis [-60] speed <20000>;
			wait-for-turn lwing around z-axis;
			turn lwing to z-axis <40> speed<240>;
			turn rwing to z-axis <-40> speed<240>;
			turn tail to x-axis <-20> speed<80>;
			move body to y-axis [0] speed <40000>;
//			emit-sfx 4096 + 5 from body; Queen Crush
			wait-for-turn lwing around z-axis;
			start-script fly();
		}
}

stopfly ()
{	
	turn lwing		to z-axis <0> 		speed <200>;
	turn rwing		to z-axis <0> 		speed <200>;
}

StartMoving()
{
	bMoving = TRUE;
	start-script fly();
	turn lfoot to x-axis <-20> speed<420>;
	turn rfoot to x-axis <-20> speed<420>;
	turn lshin to x-axis <-40> speed<420>;
	turn rshin to x-axis <-40> speed<420>;
}

StopMoving()
{
	bMoving = FALSE;
	start-script stopfly();
}

Create()
{
	emit-sfx 1026 from body;
	emit-sfx 1026 from head;
	emit-sfx 1026 from tail;
	feet = TRUE;
	turn spore1 to x-axis -90 now;
	turn spore2 to x-axis -90 now;
	turn spore3 to x-axis -90 now;
}

SweetSpot(piecenum)
	{	piecenum=body;	}	
	
AimFromWeapon1(piecenum)
	{	piecenum=firepoint;	}

QueryWeapon1(piecenum)
	{	piecenum=firepoint; }

AimFromWeapon2(piecenum)
	{	piecenum=spore1;	}

QueryWeapon2(piecenum)
	{	piecenum=spore1; }

AimFromWeapon3(piecenum)
	{	piecenum=spore2;	}

QueryWeapon3(piecenum)
	{	piecenum=spore2; }

AimFromWeapon4(piecenum)
	{	piecenum=spore3;	}

QueryWeapon4(piecenum)
	{	piecenum=spore3;	}
	
AimFromWeapon5(piecenum)
	{
		piecenum=body;
	}

QueryWeapon5(piecenum)
	{
		if (feet);
		{
			piecenum=lfoot;
		}
		if (!feet);
		{
			piecenum=rfoot;
		}
	}
	
RestoreAfterDelay()
	{
	sleep 1000;
	}

AimWeapon1(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn head to y-axis heading speed <250>;
	turn head to x-axis 0 -pitch speed <200>;
		
	wait-for-turn head around y-axis;
	start-script RestoreAfterDelay();
	
	return(TRUE);
	}
	
AimWeapon2()
	{
	return(TRUE);
	}

AimWeapon3()
	{
	return(TRUE);
	}

AimWeapon4()
	{
	return(TRUE);
	}

AimWeapon5()
	{
	return(TRUE);
	}

Shot1()
	{
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		wait-for-turn lbladeu around y-axis;
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;

		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;
		wait-for-turn lbladel around y-axis;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;

		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		wait-for-turn rbladeu around y-axis;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;

		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		wait-for-turn rbladel around y-axis;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
	}


Shot5()
	{
	feet = !feet;
	if (feet)
		{
		turn rthigh to x-axis <-60> speed<100>;
		turn rknee to x-axis <-70> speed<120>;
		turn rshin to x-axis <60> speed<120>;
		wait-for-turn lknee around x-axis;
		
		turn rthigh to x-axis <0> speed<100>;
		turn rknee to x-axis <0> speed<120>;
		turn rshin to x-axis <0> speed<120>;
		}
	if (!feet)
		{
		turn lthigh to x-axis <-60> speed<100>;
		turn lknee to x-axis <-70> speed<120>;
		turn lshin to x-axis <60> speed<120>;
		wait-for-turn lknee around x-axis;
		
		turn lthigh to x-axis <0> speed<100>;
		turn lknee to x-axis <0> speed<120>;
		turn lshin to x-axis <0> speed<120>;
		turn tail to x-axis <0> speed <320>;
		}
	}

	
HitByWeaponId()
	{
	emit-sfx 1024 from body;
	return 100;
	}

Killed( severity, corpsetype )
	{
	corpsetype = 1;
	emit-sfx 1025 from body;
	return( 0 );
	}