#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, blade, rthigh, lthigh, lleg, rleg, ruparm,
       luparm, lloarm, rloarm, base, shieldweapon, head;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4, restore_delay,
            Static_Var_6, Static_Var_7, bAiming, gun_1;

// Signal definitions
#define SIG_AIM				4


BLADEON()
{
	emit-sfx 2048 + 2 from blade;
	start-script BLADEON();
}

walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <17.214286> now;
		turn lthigh to x-axis <-48.868132> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <17.214286> now;
		turn ruparm to x-axis <-17.923077> now;
		turn luparm to x-axis <28.126374> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <30.236264> now;
		turn lthigh to x-axis <-32.346154> now;
		turn lleg to x-axis <22.137363> now;
		turn rleg to x-axis <17.571429> now;
		turn ruparm to x-axis <-20.725275> now;
		turn luparm to x-axis <15.813187> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-0.335165> now;
		turn lthigh to x-axis <-22.846154> now;
		turn rleg to x-axis <63.626374> now;
		turn ruparm to x-axis <-11.593407> now;
		turn luparm to x-axis <9.137363> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-28.467033> now;
		turn lthigh to x-axis <-10.890110> now;
		turn rleg to x-axis <84.390110> now;
		turn ruparm to x-axis <-3.148352> now;
		turn luparm to x-axis <1.038462> now;
		turn lloarm to x-axis <-59.769231> now;
		sleep 110;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <-32.346154> now;
		turn lthigh to x-axis <1.390110> now;
		turn ruparm to x-axis <4.912088> now;
		turn luparm to x-axis <1.747253> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.203297> now;
		turn rthigh to x-axis <-42.890110> now;
		turn lthigh to x-axis <11.247253> now;
		turn lleg to x-axis <29.527473> now;
		turn rleg to x-axis <79.467033> now;
		turn ruparm to x-axis <8.071429> now;
		turn luparm to x-axis <-8.423077> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.450000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <-48.868132> now;
		turn lthigh to x-axis <12.291209> now;
		turn lleg to x-axis <28.824176> now;
		turn rleg to x-axis <32.692308> now;
		turn ruparm to x-axis <15.456044> now;
		turn luparm to x-axis <-18.280220> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <-33.758242> now;
		turn lthigh to x-axis <3.148352> now;
		turn lleg to x-axis <47.813187> now;
		turn ruparm to x-axis <20.736264> now;
		turn luparm to x-axis <-7.027473> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-25.659341> now;
		turn lthigh to x-axis <-11.593407> now;
		turn lleg to x-axis <66.456044> now;
		turn ruparm to x-axis <11.247253> now;
		turn luparm to x-axis <4.912088> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-15.104396> now;
		turn lthigh to x-axis <-27.071429> now;
		turn ruparm to x-axis <2.456044> now;
		turn luparm to x-axis <14.758242> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <2.093407> now;
		turn lthigh to x-axis <-34.104396> now;
		turn lleg to x-axis <68.560440> now;
		turn ruparm to x-axis <-0.346154> now;
		turn luparm to x-axis <23.549451> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep 110;
	}
	move pelvis to y-axis [-0.400000] now;
	turn pelvis to x-axis <4.203297> now;
	turn rthigh to x-axis <11.247253> now;
	turn lthigh to x-axis <-44.291209> now;
	turn lleg to x-axis <75.593407> now;
	turn ruparm to x-axis <-8.071429> now;
	turn luparm to x-axis <26.357143> now;
	turn rloarm to x-axis <-45.703297> now;
	sleep 110;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <17.214286> now;
		turn lthigh to x-axis <-48.868132> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <17.214286> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <30.236264> now;
		turn lthigh to x-axis <-32.346154> now;
		turn lleg to x-axis <22.137363> now;
		turn rleg to x-axis <17.571429> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-0.335165> now;
		turn lthigh to x-axis <-22.846154> now;
		turn rleg to x-axis <63.626374> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-28.467033> now;
		turn lthigh to x-axis <-10.890110> now;
		turn rleg to x-axis <84.390110> now;
		sleep 110;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <-32.346154> now;
		turn lthigh to x-axis <1.390110> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.203297> now;
		turn rthigh to x-axis <-42.890110> now;
		turn lthigh to x-axis <11.247253> now;
		turn lleg to x-axis <29.527473> now;
		turn rleg to x-axis <79.467033> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.450000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <-48.868132> now;
		turn lthigh to x-axis <12.291209> now;
		turn lleg to x-axis <28.824176> now;
		turn rleg to x-axis <32.692308> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <-33.758242> now;
		turn lthigh to x-axis <3.148352> now;
		turn lleg to x-axis <47.813187> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-25.659341> now;
		turn lthigh to x-axis <-11.593407> now;
		turn lleg to x-axis <66.456044> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-15.104396> now;
		turn lthigh to x-axis <-27.071429> now;
		sleep 110;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <2.093407> now;
		turn lthigh to x-axis <-34.104396> now;
		turn lleg to x-axis <68.560440> now;
		sleep 110;
	}
	move pelvis to y-axis [-0.400000] now;
	turn pelvis to x-axis <4.203297> now;
	turn rthigh to x-axis <11.247253> now;
	turn lthigh to x-axis <-44.291209> now;
	turn lleg to x-axis <75.593407> now;
	sleep 110;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [0.001111];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	gun_1 = torso;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
	bAiming = FALSE;
	start-script BLADEON();
}

RestoreAfterDelay()
{
	sleep 10000;
	turn luparm to z-axis <0.000000> speed <80.000000>;
	turn luparm to y-axis <0.000000> speed <80.000000>;
	turn luparm to x-axis <0.000000> speed <80.000000>;
	turn lloarm to x-axis <0.000000> speed <70.016484>;
	turn lloarm to y-axis <0.000000> speed <70.016484>;
	turn lloarm to z-axis <0.000000> speed <70.016484>;
	turn torso to y-axis <0.000000> speed <90.000000>;
	wait-for-turn torso around y-axis;
	bAiming = FALSE;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 5;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimSecondary()
{
	return (1);
}

FireSecondary()
{
	return (1);
}

QuerySecondary(piecenum)
{
	piecenum = shieldweapon;
}

AimFromSecondary(piecenum)
{
	piecenum = shieldweapon;
}

AimFromPrimary(piecenum)
{
	piecenum = head;
}

QueryPrimary(piecenum)
{
	piecenum = blade;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	turn luparm to z-axis <-10.000000> speed <80.016484>;
	turn luparm to y-axis <12.000000> speed <80.016484>;
	turn torso to y-axis heading speed <130.027473>;
	turn lloarm to x-axis <-80.016484> speed <70.016484>;
	wait-for-turn torso around y-axis;
	wait-for-turn lloarm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary(Func_Var_1, Func_Var_2)
{
	if( gun_1 == 0 )
	{
		turn luparm to x-axis <-35.000000> speed <500.000000>;
		turn luparm to y-axis <-35.000000> speed <500.000000>;
		turn lloarm to x-axis <-25.000000> speed <500.000000>;
		turn lloarm to y-axis <-35.000000> speed <500.000000>;
		wait-for-turn luparm around x-axis;
		wait-for-turn luparm around y-axis;
		wait-for-turn lloarm around x-axis;
		wait-for-turn lloarm around y-axis;
		turn luparm to y-axis <-15.000000> speed <500.000000>;
		turn luparm to x-axis <-10.000000> speed <500.000000>;
		turn lloarm to y-axis <90.000000> speed <500.000000>;
		turn lloarm to x-axis <-80.000000> speed <500.000000>;
		turn blade to x-axis <90.000000> speed <500.000000>;
		turn blade to y-axis <90.000000> speed <500.000000>;
		wait-for-turn lloarm around y-axis;
		wait-for-turn lloarm around x-axis;
		wait-for-turn luparm around x-axis;
		wait-for-turn luparm around y-axis;
		wait-for-turn blade around y-axis;
		wait-for-turn blade around x-axis;
		turn blade to x-axis <0.000000> speed <300.000000>;
		turn blade to y-axis <0.000000> speed <300.000000>;
		wait-for-turn blade around x-axis;
		wait-for-turn blade around y-axis;
		gun_1 = torso;
		sleep 10;
		turn luparm to z-axis <-10.000000> speed <980.016484>;
		turn luparm to y-axis <12.000000> speed <980.016484>;
		turn lloarm to x-axis <-80.016484> speed <970.016484>;
		wait-for-turn lloarm around x-axis;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode lloarm type BITMAPONLY | BITMAP3;
		explode lthigh type BITMAPONLY | BITMAP4;
		explode luparm type BITMAPONLY | BITMAP5;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode rloarm type BITMAPONLY | BITMAP3;
		explode rthigh type BITMAPONLY | BITMAP4;
		explode ruparm type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lleg type FALL | BITMAP2;
		explode lloarm type FALL | BITMAP3;
		explode lthigh type FALL | BITMAP4;
		explode luparm type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode rloarm type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP4;
		explode ruparm type FALL | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP1;
}
