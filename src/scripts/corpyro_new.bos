#include "sfxtype.h"
#include "exptype.h"

piece  base, cylinder1, fireworks;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, jumping;

// Signal definitions
#define SIG_AIM				4


lua_FlameShot(weapon)
{
  return 0;
}

BeginJump()
{
	jumping = 1;
	emit-sfx 1027 from cylinder1;
	emit-sfx 1027 from cylinder1;	
}

EndJump()
{
	jumping = 0;
	emit-sfx 1027 from cylinder1;
	emit-sfx 1027 from cylinder1;
}

JumpSmoke()
{
	while(1)
	{
		if (jumping)
		{
			emit-sfx 1026 from cylinder1;
		}
		sleep(33);
	}
}

walk()
{
	if( bMoving )
	{
		
	}
	sleep 30;
}

walklegs()
{
	if( bMoving )
	{
	
		sleep 60;
	}
	sleep 30;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from cylinder1;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				if( !aiming )
				{
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

PilotLight(Func_Var_1)
{
	while( TRUE )
	{
		while( bAiming )
		{
			sleep 200;
		}
		while( bMoving )
		{
		    emit-sfx 1024 + 0 from cylinder1;
		    sleep 35;
		}
		emit-sfx 1024 + 1 from cylinder1;
		sleep 120;
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	restore_delay = 500;
	jumping = 0;
	start-script MotionControl();
	start-script PilotLight();
	start-script SmokeUnit();
	start-script JumpSmoke();
}

//SetMaxReloadTime(Func_Var_1)
//{
//	restore_delay = Func_Var_1 * 2;
//}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = cylinder1;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = cylinder1;
}

QueryPrimary(piecenum)
{
	piecenum = cylinder1;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	start-script RestoreAfterDelay();
	return (1);
}

Shot1()
{
	call-script lua_FlameShot(1);
	return (TRUE);
}

Killed(severity, corpsetype)
{
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;
	emit-sfx 2049 from fireworks;		
	if( severity <= 25 )
	{
		corpsetype = 1;
		
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		
		return (0);
	}
	corpsetype = 3;
	
}
