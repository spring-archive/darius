#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret1, turret2, barrel11, barrel12, barrel21, barrel22, flare11,
       flare12, flare21, flare22, wake1, wake2,
       sleeves11, sleeves21, sleeves12, sleeves22;

static-var  gun_1, gun_2;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			8

#define RESTORE_DELAY		3000


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	hide flare11;
	hide flare12;
	hide flare21;
	hide flare22;
	gun_1 = 0;
	gun_2 = 0;
	start-script SmokeUnit();
	return (0);
}

RestoreAfterDelay()
{
	sleep RESTORE_DELAY;
	turn turret1 to y-axis <0.> speed <90.>;
	turn turret2 to y-axis <0.> speed <90.>;
	turn barrel11 to x-axis <0.> speed <50.>;
	turn barrel12 to x-axis <0.> speed <50.>;
	turn barrel21 to x-axis <0.> speed <50.>;
	turn barrel22 to x-axis <0.> speed <50.>;
	return (0);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 300;
	}
	return (0);
}

StopMoving()
{
	signal SIG_MOVE;
	return (0);
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret1 to y-axis heading speed <270.>;
	turn barrel11 to x-axis <0.> - pitch speed <150.>;
	turn barrel12 to x-axis <0.> - pitch speed <150.>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn barrel11 around x-axis;
	wait-for-turn barrel12 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	gun_1 = !gun_1;
	if (gun_1)
	{
		move barrel11 to z-axis [-1] now;
		move barrel11 to z-axis 0 speed [5];
	} else {
		move barrel12 to z-axis [-1] now;
		move barrel12 to z-axis 0 speed [5];
	}
}

Shot1() {
	if(gun_1)
	{
		emit-sfx 1024 from sleeves11;
		emit-sfx 1025 from flare11;
	} else {
		emit-sfx 1024 from sleeves12;
		emit-sfx 1025 from flare12;
	}
}

AimFromWeapon1(piecenum)
{
	piecenum = turret1;
	return (0);
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret2 to y-axis heading speed <270.>;
	turn barrel21 to x-axis <0.> - pitch speed <150.>;
	turn barrel22 to x-axis <0.> - pitch speed <150.>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn barrel21 around x-axis;
	wait-for-turn barrel22 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	gun_2 = !gun_2;
	if(gun_2)
	{
		move barrel21 to z-axis [-1] now;
		move barrel21 to z-axis 0 speed [5];
	} else {
		move barrel22 to z-axis [-1] now;
		move barrel22 to z-axis 0 speed [5];
	}
}

Shot2() {
	if(gun_2)
	{
		emit-sfx 1024 from sleeves21;
		emit-sfx 1025 from flare21;
	} else {
		emit-sfx 1024 from sleeves22;
		emit-sfx 1025 from flare22;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = turret2;
	return (0);
}

QueryWeapon1(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare11;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare12;
	}
	return (0);
}

QueryWeapon2(piecenum)
{
	if( gun_2 == 0 )
	{
		piecenum = flare21;
	}
	if( gun_2 == 1 )
	{
		piecenum = flare22;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	hide flare11;
	hide flare12;
	hide flare21;
	hide flare22;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel11 type BITMAPONLY | BITMAP1;
		explode barrel22 type BITMAPONLY | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode flare22 type BITMAPONLY | BITMAP4;
		explode flare12 type BITMAPONLY | BITMAP5;
		explode flare21 type BITMAPONLY | BITMAP1;
		explode turret1 type BITMAPONLY | BITMAP2;
		explode wake1 type BITMAPONLY | BITMAP3;
		explode wake2 type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel11 type FALL | BITMAP1;
		explode barrel22 type FALL | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode flare11 type FALL | BITMAP4;
		explode flare22 type FALL | BITMAP5;
		explode flare21 type FALL | BITMAP1;
		explode turret2 type BITMAPONLY | BITMAP2;
		explode wake1 type FALL | BITMAP3;
		explode wake2 type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode flare11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode flare22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode flare12 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode turret1 type SHATTER | BITMAP2;
		explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode barrel11 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode base type BITMAPONLY | BITMAP3;
	explode flare12 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode flare21 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode flare22 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turret1 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode wake1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wake2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	return (0);
}
