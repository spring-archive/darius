#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pack, wing1, wing2, link, flame1, flame2;

static-var  Static_Var_1, statechg_DesiredState, statechg_StateChanging;


activatescr()
{
	if( TRUE )
	{
		turn wing1 to z-axis <0.000000> speed <10.000000>;
		turn wing2 to y-axis <0.000000> speed <10.000000>;
	}
	sleep 50;
}

deactivatescr()
{	
	if( TRUE )
	{
		turn wing1 to z-axis <-90.000000> speed <30.000000>;
		turn wing2 to z-axis <90.000000> speed <30.000000>;
	}
	sleep 50;
}

ProcessFlames()
{
	while( TRUE )
	{
		if( Static_Var_1 == 1 OR Static_Var_1 == 2 )
		{
			emit-sfx 1024 from flame1;
			emit-sfx 1024 from flame2;
		}
		sleep 1000;
	}
}
SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pack;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	Static_Var_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
	start-script ProcessFlames();
	start-script RequestState(0);
}


SweetSpot(piecenum)
{
	piecenum = link;
}

QueryTransport(Func_Var_1)
{
	Func_Var_1 = 1;
}

Activate()
{
	Static_Var_1 = 1;
}

TransportPickup(unitid)
{
	attach-unit unitid to link;
	start-script RequestState(0);
}

Deactivate()
{
	Static_Var_1 = 0;
}

TransportDrop(unitid)
{
	drop-unit unitid;
	start-script RequestState(1);
}


StopMoving()
{
	signal 2;
	Static_Var_1 = 0;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode wing1 type FALL | BITMAP5;
		explode wing2 type FALL | BITMAP1;
		explode pack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode wing1 type FALL | FIRE | EXPLODE_ON_HIT;
		explode wing2 type FALL | FIRE | EXPLODE_ON_HIT;
		explode pack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 1;
		explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode wing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 1;
	explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode wing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
}
